
import com.github.braisdom.jsql.Iso;

typedef native func Integer max(Symbol symbol);
typedef native func Number abs(Symbol symbol);

typedef case DetectName() {
    case member.projections.name
        when
    end
}

-- comment
typedef dataset Member(Timestamp purchaseBegin) {
    projection [
        createMaxDate(),
        :member_no as member_no,
        Iso.max(:id) as max_member_id
    ],
    from [#pumper.member as member],
    predicate (:status == 1 && :birthday > purchaseBegin),
    join [left(MemberProducts as mp, mp.member_id == member.id)],
    group [],
    order [-:id],
    having ();
}

func JProjection createMaxDate() {
    if(t == true)
        return Iso.max(:id);
    return (#table.column_name => max_date);
}

-- comment
query purchasedMember(String[] skus, Timestamp purchaseBegin, Timestamp purchaseEnd) {
    var member = new Member(purchaseBegin);

    member.predicates.And(:birthday ~= (purchaseBegin, purchaseEnd));

    if(skus.length > 0)
        member.predicates.And(:id >= 10);

    return member;
}