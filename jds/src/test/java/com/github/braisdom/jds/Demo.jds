
import com.github.braisdom.jsql.Iso;

typedef native func Integer max(Symbol symbol);
typedef native func Number abs(Symbol symbol);

typedef case BirthdayName() {

}

-- comment
typedef dataset Member(Timestamp purchaseBegin) {
    projection [
        :member_no -> member_no,
        createMaxDate() -> max_date,
        BirthdayName() -> birthday_name,
        Iso.max(:id) -> max_member_id
    ];
    from #pumper.member;
    predicate (:status == 1 && :birthday > purchaseBegin);
}

func JProjection createMaxDate() {
    if(t == true)
        return Iso.max(:id);
    return (#table.column_name => max_date);
}

-- comment
func JQuery purchasedMember(String[] skus, Timestamp purchaseBegin, Timestamp purchaseEnd) {
    Member member = new Member(purchaseBegin);
    Product product = new Product();
    Category category = new Category();

    member.predicates.and(:birthday ~= (purchaseBegin, purchaseEnd));
    member.predicates.or(:member_id > 10);

    product.joins.leftJoin(category).on(category.product_id == self.product_id);
    member.joins.leftJoin(product).on(product.member_id == self.member_id);

    if(skus.length > 0)
        member.predicates.And(:id >= 10);

    return member;
}